{"version":3,"file":"static/js/181.4c39eedc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","webpack://react-homework-template/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectedContacts = state => state.contacts.items;\nexport const selectedIsLoading = state => state.contacts.isLoading;\nexport const selectedError = state => state.contacts.error;\nexport const selectedFilter = state => state.filter.filter;\n\nexport const selectedFilteredContacts = createSelector(\n  [selectedContacts, selectedFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact => {\n      const hasName = contact.name.toLowerCase().includes(filter.toLowerCase());\n      return hasName;\n    });\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"input\":\"ContactsForm_input__UjXFK\",\"error\":\"ContactsForm_error__ateuU\"};","import { Formik, Form, Field, ErrorMessage  } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectedContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport css from './ContactsForm.module.css';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Required'),\n  number: Yup.number().min(3, 'At least 3').required('Required'),\n});\n\nexport const ContactsForm = () => {\n  const contacts = useSelector(selectedContacts);\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={(values, actions) => {\n        const isExist = contacts.find(\n          contact => contact.name.toLowerCase() === values.name.toLowerCase()\n        );\n        if (isExist) {\n          alert(`${isExist.name} is already in contacts`);\n        } else {\n          dispatch(addContact(values));\n        }\n        actions.resetForm();\n      }}\n    >\n      <Form className={css.form}>\n        <label className={css.label}>Name</label>\n        <Field className={css.input} type=\"text\" name=\"name\" />\n        <ErrorMessage className={css.error} name=\"name\" component=\"span\" />\n        <label className={css.label}>Number</label>\n        <Field className={css.input} type=\"tel\" name=\"number\" />\n        <ErrorMessage className={css.error} name=\"number\" component=\"span\" />\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__VP-XU\",\"item\":\"ContactList_item__EZYHO\",\"name\":\"ContactList_name__UCkFW\",\"btn\":\"ContactList_btn__6Piat\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectedFilteredContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectedFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={css.wrapper}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n            <li key={id} className={css.item}>\n              <span>Name: <span className={css.name}>{name}</span></span>\n              <span>Tel: {number}</span>\n              <button className={css.btn} onClick={() => dispatch(deleteContact(id))} type=\"button\">\n              Delete\n            </button>\n            </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectedFilter } from '../../redux/contacts/selectors';\nimport { onSearch } from '../../redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectedFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className={css.wrapper}>\n      <label className={css.label}>Find contacts by name:</label>\n      <input\n        className={css.input}\n        type=\"search\"\n        value={filter}\n        onChange={evt => dispatch(onSearch(evt.target.value))}\n      />\n    </div>\n  );\n};\n","import { ContactsForm } from '../components/ContactsForm/ContactsForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectedError, selectedIsLoading } from '../redux/contacts/selectors';\nimport { Loader } from '../components/Loader';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectedIsLoading);\n  const error = useSelector(selectedError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={{ padding: '0 20px', textAlign: 'center' }}>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <>\n          <Loader />\n        </>\n      )}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectedContacts","state","contacts","items","selectedIsLoading","isLoading","selectedError","error","selectedFilter","filter","selectedFilteredContacts","createSelector","contact","name","toLowerCase","includes","SignupSchema","Yup","shape","min","max","required","number","ContactsForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","isExist","find","alert","concat","addContact","resetForm","children","_jsxs","Form","className","css","Field","type","ErrorMessage","component","ContactList","filteredContacts","map","_ref","id","onClick","deleteContact","Filter","value","onChange","evt","onSearch","target","ContactsPage","useEffect","fetchContacts","style","padding","textAlign","_Fragment","Loader"],"sourceRoot":""}